[
    {
        "name": "Base Game",
        "cards": [
            {
                "cost": 0,
                "name": "Peacock Butterfly",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "horse_chestnut",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Fireflies",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fireflies').length - 1, 2)]",
                "side": "bottom",
                "species": "insect",
                "tree_type": "beech",
                "group_score_id": "group_fireflies"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Oak",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Red Squirrel",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Oak') ? 5 : 0",
                "side": "top",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 0,
                "name": "Common Toad",
                "score": "attachables.filter(c => c.treeParentId === self.treeParentId && c.side === self.side && c.name === 'Common Toad').length === 2 ? 5 : 0",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "horse_chestnut",
                "stack_limit": 2
            },
            {
                "cost": 1,
                "name": "Lynx",
                "score": "attachables.filter(c => c.name === 'Roe Deer').length > 0 ? 10 : 0",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Red Fox",
                "score": "2 * attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 0,
                "name": "Peacock Butterfly",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "silver_fir",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 1,
                "name": "Hedgehog",
                "score": "2 * attachables.filter(c => c.species.includes('butterfly')).length",
                "side": "bottom",
                "species": "pawed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Beech",
                "score": "trees.filter(c => c.name === 'Beech').length >= 4 ? 5 : 0",
                "side": "center",
                "species": "tree",
                "tree_type": "beech"
            },
            {
                "cost": 2,
                "name": "Red Deer",
                "score": "biota.filter(c => c.species.includes('tree') || c.species.includes('plant')).length",
                "side": "left",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Fallow Deer",
                "score": "3 * attachables.filter(c => c.species.includes('cloven-hoofed_animal')).length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "sycamore"
            },
            {
                "cost": 3,
                "name": "Wolf",
                "score": "5 * attachables.filter(c => c.species.includes('deer')).length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 0,
                "name": "Gnat",
                "score": "attachables.filter(c => c.species.includes('bat')).length",
                "side": "right",
                "species": "insect",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Sycamore",
                "score": "trees.length",
                "side": "center",
                "species": "tree",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Sycamore",
                "score": "trees.length",
                "side": "center",
                "species": "tree",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Sycamore",
                "score": "trees.length",
                "side": "center",
                "species": "tree",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Sycamore",
                "score": "trees.length",
                "side": "center",
                "species": "tree",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Sycamore",
                "score": "trees.length",
                "side": "center",
                "species": "tree",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Sycamore",
                "score": "trees.length",
                "side": "center",
                "species": "tree",
                "tree_type": "sycamore"
            },
            {
                "cost": 3,
                "name": "Wolf",
                "score": "5 * attachables.filter(c => c.species.includes('deer')).length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "sycamore"
            },
            {
                "cost": 1,
                "name": "Greater Horse-shoe Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "right",
                "species": "bat",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Greater Horse-shoe Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "right",
                "species": "bat",
                "tree_type": "linden"
            },
            {
                "cost": 0,
                "name": "Purple Emperor",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "birch",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Tree Frog",
                "score": "5 * attachables.filter(c => c.name === 'Gnat').length",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Tree Frog",
                "score": "5 * attachables.filter(c => c.name === 'Gnat').length",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Linden",
                "score": "trees.filter(t => t.name === 'Linden').length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + (t.name === 'Linden'), acc), {}))) ? 3 : 1",
                "side": "center",
                "species": "tree",
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Fallow Deer",
                "score": "3 * attachables.filter(c => c.species.includes('cloven-hoofed_animal')).length",
                "side": "left",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Fallow Deer",
                "score": "3 * attachables.filter(c => c.species.includes('cloven-hoofed_animal')).length",
                "side": "left",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Roe Deer",
                "score": "3 * biota.filter(c => c.tree_type === 'birch').length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Barbastelle Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Wild Boar",
                "score": "attachables.filter(c => c.name === 'Squeaker').length > 0 ? 10 : 0",
                "side": "right",
                "species": "cloven-hoofed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Large Tortoiseshell",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "silver_fir",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Large Tortoiseshell",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "silver_fir",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Blackberries",
                "score": "2 * attachables.filter(c => c.species.includes('plant')).length",
                "side": "bottom",
                "species": "plant",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Horse Chestnut",
                "score": "[1, 4, 9, 16, 25, 36, 49][Math.min(trees.filter(t => t.name === 'Horse Chestnut').length - 1, 6)]",
                "side": "center",
                "species": "tree",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Bechstein's Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "Chaffinch",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Beech') ? 5 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "beech"
            },
            {
                "cost": 0,
                "name": "Common Toad",
                "score": "attachables.filter(c => c.treeParentId === self.treeParentId && c.side === self.side && c.name === 'Common Toad').length === 2 ? 5 : 0",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "silver_fir",
                "stack_limit": 2
            },
            {
                "cost": 1,
                "name": "Brown Long-Eared Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "sycamore"
            },
            {
                "cost": 1,
                "name": "Brown Long-Eared Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "sycamore"
            },
            {
                "cost": 1,
                "name": "European Badger",
                "score": "2",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "European Badger",
                "score": "2",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Tawny Owl",
                "score": "5",
                "side": "top",
                "species": "bird",
                "tree_type": "beech"
            },
            {
                "cost": 2,
                "name": "Tawny Owl",
                "score": "5",
                "side": "top",
                "species": "bird",
                "tree_type": "beech"
            },
            {
                "cost": 2,
                "name": "Stag Beetle",
                "score": "attachables.filter(c => c.species.includes('pawed_animal')).length",
                "side": "bottom",
                "species": "insect",
                "tree_type": "sycamore"
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "oak",
                "stack_limit": -1
            },
            {
                "cost": 0,
                "name": "Peacock Butterfly",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "linden",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Common Toad",
                "score": "attachables.filter(c => c.treeParentId === self.treeParentId && c.side === self.side && c.name === 'Common Toad').length === 2 ? 5 : 0",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "beech",
                "stack_limit": 2
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "linden",
                "stack_limit": -1
            },
            {
                "cost": 2,
                "name": "Wild Boar",
                "score": "attachables.filter(c => c.name === 'Squeaker').length > 0 ? 10 : 0",
                "side": "left",
                "species": "cloven-hoofed_animal",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Beech Marten",
                "score": "trees.filter(t => ['top', 'bottom', 'left', 'right'].every(side => attachables.some(a => a.treeParentId === t.id && a.side === side))).length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "Barbastelle Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "right",
                "species": "bat",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "European Fat Dormouse",
                "score": "attachables.some(a => a.treeParentId === self.treeParentId && a.species.includes('bat')) ? 15 : 0",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "European Fat Dormouse",
                "score": "attachables.some(a => a.treeParentId === self.treeParentId && a.species.includes('bat')) ? 15 : 0",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Brown Long-Eared Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "right",
                "species": "bat",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Eurasian Jay",
                "score": "3",
                "side": "top",
                "species": "bird",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Fly Agaric",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Silver Fir",
                "score": "2 * attachables.filter(c => c.treeParentId === self._id).length",
                "side": "center",
                "species": "tree",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Silver Fir",
                "score": "2 * attachables.filter(c => c.treeParentId === self._id).length",
                "side": "center",
                "species": "tree",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Silver Fir",
                "score": "2 * attachables.filter(c => c.treeParentId === self._id).length",
                "side": "center",
                "species": "tree",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Silver Fir",
                "score": "2 * attachables.filter(c => c.treeParentId === self._id).length",
                "side": "center",
                "species": "tree",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Silver Fir",
                "score": "2 * attachables.filter(c => c.treeParentId === self._id).length",
                "side": "center",
                "species": "tree",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Silver Fir",
                "score": "2 * attachables.filter(c => c.treeParentId === self._id).length",
                "side": "center",
                "species": "tree",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Greater Horse-shoe Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "European Fat Dormouse",
                "score": "attachables.some(a => a.treeParentId === self.treeParentId && a.species.includes('bat')) ? 15 : 0",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "European Badger",
                "score": "2",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 1,
                "name": "European Badger",
                "score": "2",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Fallow Deer",
                "score": "3 * attachables.filter(c => c.species.includes('cloven-hoofed_animal')).length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "birch"
            },
            {
                "cost": 2,
                "name": "Red Deer",
                "score": "biota.filter(c => c.species.includes('tree') || c.species.includes('plant')).length",
                "side": "left",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "linden"
            },
            {
                "cost": 3,
                "name": "Brown Bear",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 0,
                "name": "Purple Emperor",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "horse_chestnut",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Purple Emperor",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "horse_chestnut",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Moss",
                "score": "trees.length >= 10 ? 10 : 0",
                "side": "bottom",
                "species": "plant",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Douglas Fir",
                "score": "5",
                "side": "center",
                "species": "tree",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 0,
                "name": "Large Tortoiseshell",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "beech",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 2,
                "name": "Mole",
                "side": "bottom",
                "species": "pawed_animal",
                "tree_type": "sycamore"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Birch",
                "score": "1",
                "side": "center",
                "species": "tree",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Bechstein's Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "European Fat Dormouse",
                "score": "attachables.some(a => a.treeParentId === self.treeParentId && a.species.includes('bat')) ? 15 : 0",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Goshawk",
                "score": "3 * attachables.filter(c => c.species.includes('bird')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Goshawk",
                "score": "3 * attachables.filter(c => c.species.includes('bird')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Hedgehog",
                "score": "2 * attachables.filter(c => c.species.includes('butterfly')).length",
                "side": "bottom",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Wild Boar",
                "score": "attachables.filter(c => c.name === 'Squeaker').length > 0 ? 10 : 0",
                "side": "left",
                "species": "cloven-hoofed_animal",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Wild Boar",
                "score": "attachables.filter(c => c.name === 'Squeaker').length > 0 ? 10 : 0",
                "side": "left",
                "species": "cloven-hoofed_animal",
                "tree_type": "sycamore"
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "silver_fir",
                "stack_limit": -1
            },
            {
                "cost": 2,
                "name": "Pond Turtle",
                "score": "5",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "sycamore"
            },
            {
                "cost": 3,
                "name": "Brown Bear",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Raccoon",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Violet Carpenter Bee",
                "side": "left",
                "species": "insect",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Violet Carpenter Bee",
                "side": "right",
                "species": "insect",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Violet Carpenter Bee",
                "side": "right",
                "species": "insect",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "sycamore",
                "stack_limit": -1
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "sycamore",
                "stack_limit": -1
            },
            {
                "cost": 1,
                "name": "Chaffinch",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Beech') ? 5 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "sycamore"
            },
            {
                "cost": 1,
                "name": "Chaffinch",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Beech') ? 5 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Parasol Mushroom",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "silver_fir"
            },
            {
                "cost": 0,
                "name": "Peacock Butterfly",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "oak",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 2,
                "name": "Chanterelle",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Roe Deer",
                "score": "3 * biota.filter(c => c.tree_type === 'silver_fir').length",
                "side": "left",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Lynx",
                "score": "attachables.filter(c => c.name === 'Roe Deer').length > 0 ? 10 : 0",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Tawny Owl",
                "score": "5",
                "side": "top",
                "species": "bird",
                "tree_type": "sycamore"
            },
            {
                "cost": 0,
                "name": "Common Toad",
                "score": "attachables.filter(c => c.treeParentId === self.treeParentId && c.side === self.side && c.name === 'Common Toad').length === 2 ? 5 : 0",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "douglas_fir",
                "stack_limit": 2
            },
            {
                "cost": 1,
                "name": "Violet Carpenter Bee",
                "side": "left",
                "species": "insect",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Lynx",
                "score": "attachables.filter(c => c.name === 'Roe Deer').length > 0 ? 10 : 0",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 0,
                "name": "Silver-Washed Fritillary",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "beech",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Moss",
                "score": "trees.length >= 10 ? 10 : 0",
                "side": "bottom",
                "species": "plant",
                "tree_type": "linden"
            },
            {
                "cost": 0,
                "name": "Moss",
                "score": "trees.length >= 10 ? 10 : 0",
                "side": "bottom",
                "species": "plant",
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Red Fox",
                "score": "2 * attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Red Fox",
                "score": "2 * attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "linden"
            },
            {
                "cost": 0,
                "name": "Squeaker",
                "score": "1",
                "side": "left",
                "species": "cloven-hoofed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Red Deer",
                "score": "biota.filter(c => c.species.includes('tree') || c.species.includes('plant')).length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Gnat",
                "score": "attachables.filter(c => c.species.includes('bat')).length",
                "side": "right",
                "species": "insect",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "Bullfinch",
                "score": "2 * attachables.filter(c => c.species.includes('insect')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Bullfinch",
                "score": "2 * attachables.filter(c => c.species.includes('insect')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Bullfinch",
                "score": "2 * attachables.filter(c => c.species.includes('insect')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Hedgehog",
                "score": "2 * attachables.filter(c => c.species.includes('butterfly')).length",
                "side": "bottom",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Barbastelle Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "left",
                "species": "bat",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Beech Marten",
                "score": "trees.filter(t => ['top', 'bottom', 'left', 'right'].every(side => attachables.some(a => a.treeParentId === t.id && a.side === side))).length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Beech Marten",
                "score": "trees.filter(t => ['top', 'bottom', 'left', 'right'].every(side => attachables.some(a => a.treeParentId === t.id && a.side === side))).length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Beech Marten",
                "score": "trees.filter(t => ['top', 'bottom', 'left', 'right'].every(side => attachables.some(a => a.treeParentId === t.id && a.side === side))).length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Bechstein's Bat",
                "score": "trees.filter(t => new Set(attachables.filter(a => a.treeParentId === t.id && a.species.includes('bat')).map(a => a.name)).size >= 3).length >= 1 ? 5 : 0",
                "side": "right",
                "species": "bat",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Camberwell Beauty",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "birch",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 1,
                "name": "Great Spotted Woodpecker",
                "score": "trees.filter(t => t.playedBy === self.playedBy).length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + 1, acc), {}))) ? 10 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Great Spotted Woodpecker",
                "score": "trees.filter(t => t.playedBy === self.playedBy).length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + 1, acc), {}))) ? 10 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "linden"
            },
            {
                "cost": 1,
                "name": "Great Spotted Woodpecker",
                "score": "trees.filter(t => t.playedBy === self.playedBy).length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + 1, acc), {}))) ? 10 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "linden"
            },
            {
                "cost": 2,
                "name": "Penny Bun",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Penny Bun",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Parasol Mushroom",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 0,
                "name": "Tree Frog",
                "score": "5 * attachables.filter(c => c.name === 'Gnat').length",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "linden"
            },
            {
                "cost": 0,
                "name": "Camberwell Beauty",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "sycamore",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Camberwell Beauty",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "sycamore",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 2,
                "name": "Pond Turtle",
                "score": "5",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "silver_fir",
                "stack_limit": -1
            },
            {
                "cost": 2,
                "name": "Red Fox",
                "score": "2 * attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Fireflies",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fireflies').length - 1, 2)]",
                "side": "bottom",
                "species": "insect",
                "tree_type": "linden",
                "group_score_id": "group_fireflies"
            },
            {
                "cost": 2,
                "name": "Roe Deer",
                "score": "3 * biota.filter(c => c.tree_type === 'horse_chestnut').length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 0,
                "name": "Gnat",
                "score": "attachables.filter(c => c.species.includes('bat')).length",
                "side": "left",
                "species": "insect",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Raccoon",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Roe Deer",
                "score": "3 * biota.filter(c => c.tree_type === 'beech').length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "beech"
            },
            {
                "cost": 2,
                "name": "Fly Agaric",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Purple Emperor",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "linden",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 1,
                "name": "Fire Salamander",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fire Salamander').length - 1, 2)]",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "douglas_fir",
                "group_score_id": "group_salamanders"
            },
            {
                "cost": 3,
                "name": "Wolf",
                "score": "5 * attachables.filter(c => c.species.includes('deer')).length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "silver_fir"
            },
            {
                "cost": 3,
                "name": "Wolf",
                "score": "5 * attachables.filter(c => c.species.includes('deer')).length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "silver_fir"
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "beech",
                "stack_limit": -1
            },
            {
                "cost": 2,
                "name": "Red Deer",
                "score": "biota.filter(c => c.species.includes('tree') || c.species.includes('plant')).length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 2,
                "name": "Red Deer",
                "score": "biota.filter(c => c.species.includes('tree') || c.species.includes('plant')).length",
                "side": "right",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 0,
                "name": "Red Squirrel",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Oak') ? 5 : 0",
                "side": "top",
                "species": "pawed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Wild Strawberries",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "bottom",
                "species": "plant",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Common Toad",
                "score": "attachables.filter(c => c.treeParentId === self.treeParentId && c.side === self.side && c.name === 'Common Toad').length === 2 ? 5 : 0",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "oak",
                "stack_limit": 2
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "birch",
                "stack_limit": -1
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "birch",
                "stack_limit": -1
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "birch",
                "stack_limit": -1
            },
            {
                "cost": 1,
                "name": "Lynx",
                "score": "attachables.filter(c => c.name === 'Roe Deer').length > 0 ? 10 : 0",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Lynx",
                "score": "attachables.filter(c => c.name === 'Roe Deer').length > 0 ? 10 : 0",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Raccoon",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Silver-Washed Fritillary",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "oak",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Silver-Washed Fritillary",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "oak",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Silver-Washed Fritillary",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "oak",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 0,
                "name": "Blackberries",
                "score": "2 * attachables.filter(c => c.species.includes('plant')).length",
                "side": "bottom",
                "species": "plant",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Fire Salamander",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fire Salamander').length - 1, 3)]",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "horse_chestnut",
                "group_score_id": "group_salamanders"
            },
            {
                "cost": 0,
                "name": "Red Squirrel",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Oak') ? 5 : 0",
                "side": "top",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Fire Salamander",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fire Salamander').length, [5, 15, 25].length - 1)]",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "linden",
                "group_score_id": "group_salamanders"
            },
            {
                "cost": 0,
                "name": "Squeaker",
                "score": "1",
                "side": "left",
                "species": "cloven-hoofed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 1,
                "name": "Lynx",
                "score": "attachables.filter(c => c.name === 'Roe Deer').length > 0 ? 10 : 0",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "silver_fir"
            },
            {
                "cost": 2,
                "name": "Roe Deer",
                "score": "3 * biota.filter(c => c.tree_type === 'linden').length",
                "side": "left",
                "species": [
                    "cloven-hoofed_animal",
                    "deer"
                ],
                "tree_type": "linden"
            },
            {
                "cost": 0,
                "name": "Squeaker",
                "score": "1",
                "side": "right",
                "species": "cloven-hoofed_animal",
                "tree_type": "sycamore"
            },
            {
                "cost": 2,
                "name": "Stag Beetle",
                "score": "attachables.filter(c => c.species.includes('pawed_animal')).length",
                "side": "bottom",
                "species": "insect",
                "tree_type": "birch"
            },
            {
                "cost": 2,
                "name": "Goshawk",
                "score": "3 * attachables.filter(c => c.species.includes('bird')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Bullfinch",
                "score": "2 * attachables.filter(c => c.species.includes('insect')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Tree Ferns",
                "score": "6 * attachables.filter(c => c.species.includes('amphibian'))",
                "side": "bottom",
                "species": "plant",
                "tree_type": "linden"
            },
            {
                "cost": 0,
                "name": "Squeaker",
                "score": "1",
                "side": "right",
                "species": "cloven-hoofed_animal",
                "tree_type": "oak"
            },
            {
                "cost": 2,
                "name": "Red Fox",
                "score": "2 * attachables.filter(c => c.name === 'European Hare').length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "beech"
            },
            {
                "cost": 0,
                "name": "European Hare",
                "score": "attachables.filter(c => c.name === 'European Hare').length",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "linden",
                "stack_limit": -1
            },
            {
                "cost": 0,
                "name": "Camberwell Beauty",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "horse_chestnut",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 2,
                "name": "Chanterelle",
                "side": "bottom",
                "species": "mushroom",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Raccoon",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 1,
                "name": "Eurasian Jay",
                "score": "3",
                "side": "top",
                "species": "bird",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Eurasian Jay",
                "score": "3",
                "side": "top",
                "species": "bird",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Tree Ferns",
                "score": "6 * attachables.filter(c => c.species.includes('amphibian'))",
                "side": "bottom",
                "species": "plant",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Beech Marten",
                "score": "trees.filter(t => ['top', 'bottom', 'left', 'right'].every(side => attachables.some(a => a.treeParentId === t.id && a.side === side))).length",
                "side": "left",
                "species": "pawed_animal",
                "tree_type": "sycamore"
            },
            {
                "cost": 3,
                "name": "Brown Bear",
                "side": "right",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 0,
                "name": "Wild Strawberries",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "bottom",
                "species": "plant",
                "tree_type": "sycamore"
            },
            {
                "cost": 0,
                "name": "Wild Strawberries",
                "score": "new Set(trees.map(t => t.tree_type)).size >= 8 ? 10 : 0",
                "side": "bottom",
                "species": "plant",
                "tree_type": "sycamore"
            },
            {
                "cost": 0,
                "name": "Blackberries",
                "score": "2 * attachables.filter(c => c.species.includes('plant')).length",
                "side": "bottom",
                "species": "plant",
                "tree_type": "silver_fir"
            },
            {
                "cost": 1,
                "name": "Chaffinch",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Beech') ? 5 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Wood Ant",
                "score": "2 * attachables.filter(a => a.side === 'bottom').length",
                "side": "bottom",
                "species": "insect",
                "tree_type": "beech"
            },
            {
                "cost": 1,
                "name": "Wood Ant",
                "score": "2 * attachables.filter(a => a.side === 'bottom').length",
                "side": "bottom",
                "species": "insect",
                "tree_type": "beech"
            },
            {
                "cost": 0,
                "name": "Fireflies",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fireflies').length - 1, 2)]",
                "side": "bottom",
                "species": "insect",
                "tree_type": "douglas_fir",
                "group_score_id": "group_fireflies"
            },
            {
                "cost": 1,
                "name": "Eurasian Jay",
                "score": "3",
                "side": "top",
                "species": "bird",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 1,
                "name": "Tree Ferns",
                "score": "6 * attachables.filter(c => c.species.includes('amphibian'))",
                "side": "bottom",
                "species": "plant",
                "tree_type": "silver_fir"
            },
            {
                "cost": 0,
                "name": "Red Squirrel",
                "score": "trees.filter(c => c._id === self.treeParentId && c.name === 'Oak') ? 5 : 0",
                "side": "top",
                "species": "pawed_animal",
                "tree_type": "horse_chestnut"
            },
            {
                "cost": 0,
                "name": "Fireflies",
                "score": "[5, 15, 25][Math.min(attachables.filter(a => a.name === 'Fireflies').length - 1, 2)]",
                "side": "bottom",
                "species": "insect",
                "tree_type": "sycamore",
                "group_score_id": "group_fireflies"
            },
            {
                "cost": 1,
                "name": "Wood Ant",
                "score": "2 * attachables.filter(a => a.side === 'bottom').length",
                "side": "bottom",
                "species": "insect",
                "tree_type": "birch"
            },
            {
                "cost": 1,
                "name": "Great Spotted Woodpecker",
                "score": "trees.filter(t => t.playedBy === self.playedBy).length > Math.max(...Object.values(allTrees.reduce((acc, t) => (acc[t.playerId] = (acc[t.playerId] || 0) + 1, acc), {}))) ? 10 : 0",
                "side": "top",
                "species": "bird",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Goshawk",
                "score": "3 * attachables.filter(c => c.species.includes('bird')).length",
                "side": "top",
                "species": "bird",
                "tree_type": "oak"
            },
            {
                "cost": 0,
                "name": "Common Toad",
                "score": "attachables.filter(c => c.treeParentId === self.treeParentId && c.side === self.side && c.name === 'Common Toad').length === 2 ? 5 : 0",
                "side": "bottom",
                "species": "amphibian",
                "tree_type": "sycamore",
                "stack_limit": 2
            },
            {
                "cost": 2,
                "name": "Wild Boar",
                "score": "attachables.filter(c => c.name === 'Squeaker').length > 0 ? 10 : 0",
                "side": "right",
                "species": "cloven-hoofed_animal",
                "tree_type": "douglas_fir"
            },
            {
                "cost": 2,
                "name": "Tawny Owl",
                "score": "5",
                "side": "top",
                "species": "bird",
                "tree_type": "birch"
            },
            {
                "cost": 0,
                "name": "Large Tortoiseshell",
                "score": "[0, 3, 6, 12, 20][Math.min(new Set(attachables.filter(a => a.species.includes('butterfly')).map(a => a.name)).size - 1, 4)]",
                "side": "top",
                "species": [
                    "butterfly",
                    "insect"
                ],
                "tree_type": "sycamore",
                "group_score_id": "group_butterflies"
            },
            {
                "cost": 2,
                "name": "Mole",
                "side": "bottom",
                "species": "pawed_animal",
                "tree_type": "oak"
            }
        ]
    }
]